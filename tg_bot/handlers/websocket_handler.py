from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from datetime import datetime
import websockets
import json

router_websocket = Router()

connected_users = set()

@router_websocket.message(Command("connect"))
async def connect_to_websocket(message: Message):
    connected_users.add(message.from_user.id)
    await message.answer("üöÄ –¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")

@router_websocket.callback_query(F.data =="connect")
async def connect_to_websocket(callback: CallbackQuery):
    connected_users.add(callback.from_user.id)
    await callback.message.answer("üöÄ –¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")


@router_websocket.message(Command("stop"))
async def disconnect_from_websocket(message: Message):
    connected_users.discard(message.from_user.id)
    await message.answer("üîå –í—ã –æ—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.")

@router_websocket.callback_query(F.data =="stop")
async def disconnect_from_websocket(callback: CallbackQuery):
    connected_users.discard(callback.from_user.id)
    await callback.message.answer("üîå –í—ã –æ—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.")



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
async def send_message_to_user(bot, message, user_id):
    data = json.loads(message)

    name = data['balance']['asset']
    wallet = data['balance']['wallet_name']
    network = data['balance']['network_name']
    balance = data['balance']['balance']
    price = data['balance']['price']
    value = balance * price

    start_time = datetime.strptime(data['balance']['updated'], "%Y-%m-%dT%H:%M:%S.%fZ")
    current_time = datetime.now()
    time_difference = current_time - start_time

    await bot.send_message(chat_id=user_id, text=f"*–ö–æ—à–µ–ª—ë–∫*: *{wallet}*\n\
*–¢–æ–∫–µ–Ω*: *{name}*\n\
    - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: *{round(balance, 2)} {name}*\n\
    - –¶–µ–Ω–∞: *${round(price, 4)}* –∑–∞ 1 {name}\n\
    - –°—É–º–º–∞: *${round(value, 2)}*\n\
    - –°–µ—Ç—å: *{network}*\n\
    - –û–±–Ω–æ–≤–ª–µ–Ω–æ: *{time_difference}*\n",
        parse_mode='Markdown'
    )


host = "3f9215732d0c.vps.myjino.ru"
# host = "127.0.0.1:8000"

# WebSocket –∫–ª–∏–µ–Ω—Ç
async def websocket_client(bot):
    async with websockets.connect(f'ws://{host}/ws/wallet/') as websocket:
        try:
            while True:
                message = await websocket.recv()
                for user_id in connected_users:
                    await send_message_to_user(bot, message, user_id)
        except websockets.ConnectionClosed:
            for user_id in connected_users:
                await bot.send_message(chat_id=user_id, 
                    text=f"üî• –ö–∞–∂–µ—Ç—Å—è, –≤–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–±–æ–ª—å—à–∞—è –Ω–µ–ø–æ–ª–∞–¥–∫–∞. –ù–æ –Ω–µ –±–µ—Å–ø–æ–∫–æ–π—Ç–µ—Å—å, –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–µ—Ä—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Ç—É–∞—Ü–∏–∏!",
                    parse_mode='Markdown'
                )